"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

$.mlpFnName = function (fn) {
  return fn.name || (fn + '').split(/\s|\(/)[1];
};

$.mlpInit = function (fn, name, set) {
  if (typeof set == "undefined") {
    set = true;
  }
  window.MLP = window.MLP || {};
  window.MLP.apps = window.MLP.apps || {};
  window.MLP.instances = window.MLP.instances || {};
  if (fn && set) {
    name = name || $.mlpFnName(fn);
    window.MLP.apps[name] = fn;
  } else {
    return window.MLP.apps[fn];
  }
};

/***
@fn (obj) - the JS object class
@name (str) - the name of the class
@bypass (bool) - whether or not the plugin can be instantiated multiple times
@elPlugin (bool) - whether to create an element based plugin $(...).pluginName 
or regular JQuery method $.methodName
@returnContext (bool) - whether to return an object with class context 
and the element which instantiated the plugin (@elPlugin must be true)
**/

$.mlpPlugin = function (fn, name, bypass, elPlugin, returnContext) {
  var obj;
  if (typeof bypass == "undefined") {
    bypass = false;
  }
  if (typeof elPlugin == "undefined") {
    elPlugin = true;
  }
  if (typeof returnContext == "undefined") {
    returnContext = true;
  }
  obj = {};
  $.mlpInit(fn, name);
  name = name || $.mlpFnName(fn);
  obj[name] = function () {
    var args,
        option,
        _el,
        _this = [],
        result;
    option = arguments[0];
    args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];
    _el = $(this).each(function () {
      var $this, data, key;
      $this = $(this);
      key = 'mlp-' + name;
      data = $this.data(key);
      if (!data || bypass) {
        $this.data('name', name);
        $this.data(key, data = new fn(option, this));
      }
      if (typeof option === 'string') {
        return data[option].apply(data, args);
      }
      _this.push(data);
    });
    result = returnContext ? { mlp: _this, el: _el } : null;
    return result;
  };
  $.fn.extend(obj);
  if (!elPlugin) {
    obj[name] = function (option) {
      return new fn(option);
    };
    $.extend(obj);
  }
};

var MLPModule = function () {
  _createClass(MLPModule, [{
    key: "defaults",
    value: function defaults() {
      this.defaults = {};
    }
  }]);

  function MLPModule(options, element) {
    _classCallCheck(this, MLPModule);

    this.ops = $.extend({}, this.defaults, options);
    this.sel = this.sel || {};
    this.el = this.el || {};
    this.el.target = $(element);
    this.init();
    return this;
  }

  _createClass(MLPModule, [{
    key: "init",
    value: function init() {
      this.classes = {
        active: 'is-active',
        offscreen: 'l-offscreen'
      };

      this.keys = {
        esc: 27,
        down: 40,
        up: 38,
        left: 37,
        right: 39,
        o: 79,
        space: 32,
        tab: 9,
        enter: 13
      };

      this.aria = {
        expanded: 'aria-expanded',
        hidden: 'aria-hidden',
        controls: 'aria-controls',
        selected: 'aria-selected',
        invalid: 'aria-invalid',
        pressed: 'aria-pressed',
        described: 'aria-describedby',
        checked: 'aria-checked',
        label: 'aria-label',
        labelled: 'aria-labelledby',
        popup: 'aria-haspopup'
      };

      this.attr = {
        tabindex: 'tabindex'
      };
    }
  }, {
    key: "stop",
    value: function stop(e) {
      e.preventDefault();
      return e.stopPropagation();
    }
  }, {
    key: "target",
    value: function target(e) {
      return $(e.target);
    }
  }, {
    key: "currentTarget",
    value: function currentTarget(e) {
      return $(e.currentTarget);
    }
  }, {
    key: "isEnter",
    value: function isEnter(e) {
      return this.keycode(e) === this.keys.enter;
    }
  }, {
    key: "isSpace",
    value: function isSpace(e) {
      return this.keycode(e) === this.keys.space;
    }
  }, {
    key: "isTab",
    value: function isTab(e) {
      return this.keycode(e) === this.keys.tab;
    }
  }, {
    key: "isBackTab",
    value: function isBackTab(e) {
      return e.shiftKey && this.isTab(e);
    }
  }, {
    key: "isEsc",
    value: function isEsc(e) {
      return this.keycode(e) === this.keys.esc;
    }
  }, {
    key: "isEnterOrSpace",
    value: function isEnterOrSpace(e) {
      return this.isEnter(e) || this.isSpace(e);
    }
  }, {
    key: "keycode",
    value: function keycode(e) {
      return e.which;
    }
  }, {
    key: "isIE",
    value: function isIE(version) {
      if (typeof version == "undefined") {
        version = 8;
      }
      return bowser.msie && bowser.version === version;
    }
  }]);

  return MLPModule;
}();

$.mlpInit(MLPModule, 'MLPModule');
'use strict';

/*
  Every plugin initialization goes here.
 */
$(document).ready(function () {

  // console.log('%c Welcome to FELab, a MullenLowe Profero product. ', 'background: #c3a90a;\ncolor: #ffffff;\nfont-size: 18px;\nfont-family: "Helvetica Neue";\nfont-weight: 300;\nline-height: 30px;\nheight: 30px;\npadding: 5px');
  // homepage navigation
  $('[data-js-top-nav]').TopNav();

  $('[data-js-switch-tab]').SwitchTab();
  $('[data-js-skewing]').Skewing();
  $('[data-js-masonry]').MasonryGallery();
  $('[data-js-validate]').Validate();
  $('[data-js-stars]').Stars();

  // white box on contact page
  $('[data-js-white-box]').WhiteBox();

  // carousel on about-us page
  $('[data-js-owl-carousel]').OwlCarousel();

  // side bar
  $('[data-js-side-nav]').SideNav();

  // wedo-work popup gallery
  $.GalleryPopup();

  setTimeout(function () {
    $('[data-js-fullpage]').FullPage();
  }, 0);

  if ($(".fancybox")) $(".fancybox").fancybox();
});
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
# extends jquery.fullpage.js, scrolloverflow.js
#

*/

var FullPage = function (_MLP$apps$MLPModule) {
  _inherits(FullPage, _MLP$apps$MLPModule);

  function FullPage() {
    _classCallCheck(this, FullPage);

    return _possibleConstructorReturn(this, (FullPage.__proto__ || Object.getPrototypeOf(FullPage)).apply(this, arguments));
  }

  _createClass(FullPage, [{
    key: 'init',
    value: function init() {
      _get(FullPage.prototype.__proto__ || Object.getPrototypeOf(FullPage.prototype), 'init', this).call(this);
      this.el = {
        fullpageContainer: this.el.target,
        navItems: $('[data-js-top-nav]').find('a')
      };

      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this,
          _panel = $('.c-homepage__tab-panel'),
          _creative = $('.section.c-homepage__1');
      this.el.fullpageContainer.fullpage({
        'navigation': true,
        'scrollOverflow': true,
        'lockAnchors': true,
        afterLoad: function afterLoad(anchor, index) {
          var _index = index - 1;
          var navLong = $(_this.el.navItems).length;
          $(_this.el.navItems).removeClass('active');

          // 前两个section 分别对应前两个导航active
          if (_index < 2) {
            $(_this.el.navItems[_index]).addClass('active');
            if (_index === 0) {
              _creative.addClass('in');
            } else {
              _creative.removeClass('in');
            }
            //添加第二屏菜单淡入效果
            if (_index === 1) {
              _panel.addClass('in');
            } else {
              _panel.removeClass('in');
            }
          }
          // 最后一个section 导航倒数第二个加active
          else if (_index == navLong) {
              _index -= 2;
              $(_this.el.navItems[_index]).addClass('active');
            } else {
              _index -= 1;
              $(_this.el.navItems[_index]).addClass('active');
              _panel.removeClass('in');
              _creative.removeClass('in');
            }
        }
      });

      // next button
      $('.js-fullpage-next-button').on('click', function () {
        $.fn.fullpage.moveSectionDown();
      });

      // 点击nav页面滚动到特定section
      this.el.navItems.each(function (index) {
        var _index = index + 1;
        var navLong = $(_this.el.navItems).length;
        //前两个section
        if (_index <= 2) {
          $(this).on('click', function () {
            $.fn.fullpage.moveTo(_index);
          });
        }

        // 导航最后一个链接
        else if (_index == navLong) {
            return;
          } else {
            _index += 1;
            $(this).on('click', function () {
              $.fn.fullpage.moveTo(_index);
            });
          }
      });
    }
  }]);

  return FullPage;
}(MLP.apps.MLPModule);

$.mlpPlugin(FullPage, 'FullPage', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GalleryPopup = function (_MLP$apps$MLPModule) {
  _inherits(GalleryPopup, _MLP$apps$MLPModule);

  function GalleryPopup() {
    _classCallCheck(this, GalleryPopup);

    return _possibleConstructorReturn(this, (GalleryPopup.__proto__ || Object.getPrototypeOf(GalleryPopup)).apply(this, arguments));
  }

  _createClass(GalleryPopup, [{
    key: 'init',
    value: function init() {
      _get(GalleryPopup.prototype.__proto__ || Object.getPrototypeOf(GalleryPopup.prototype), 'init', this).call(this);
      this.el.btns = $('.js-popup-btn');
      this.el.gallery = $('.js-gallery-images');
      this.el.cover = $('.js-gallery-cover');
      this.el.close = $('.js-gallery-close');
      this.el.carousel = $('.gallery-carousel');
      this.el.carouselPrev = $('.js-carousel-prev');
      this.el.carouselNext = $('.js-carousel-next');

      this.event();
      this.popupOpened = false;
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      var num;

      this.el.carousel.owlCarousel({
        dots: false,
        items: 1,
        smartSpeed: 0,
        loop: true,
        autoHeight: true
      });

      this.el.gallery.hide();

      this.el.btns.each(function (index) {
        $(this).on('click', function (e) {
          e.preventDefault();
          num = index;
          _this.openPopup(num);
        });
      });

      this.el.close.on('click', function () {
        _this.closePopup();
      });

      this.el.carouselPrev.on('click', function () {
        _this.el.carousel.trigger('prev.owl.carousel');
        // _this.goPrev();
      });

      this.el.carouselNext.on('click', function () {
        _this.el.carousel.trigger('next.owl.carousel');
        // _this.goNext();
      });

      $(window).resize(function () {
        if (_this.popupOpened) {
          _this.openPopup(num);
        }
      });
    }
  }, {
    key: 'openPopup',
    value: function openPopup(num) {
      var _this = this;
      var _screenTop = $(window).scrollTop();
      var _screenHeight = $(window).height();
      var _screenWidth = $(window).width();
      var galleryWidth = $(this.el.gallery).width();

      _this.popupOpened = true;

      this.el.carousel.trigger('to.owl.carousel', num);

      this.el.cover.css({
        top: _screenTop,
        height: _screenHeight,
        width: _screenWidth
      });
      this.el.gallery.css({
        top: _screenTop,
        height: _screenHeight,
        left: (_screenWidth - galleryWidth) / 2
      });

      $('body').css({
        'overflow': 'hidden'
      });

      this.el.cover.show();
      this.el.gallery.show();
    }
  }, {
    key: 'closePopup',
    value: function closePopup() {
      var _this = this;

      this.popupOpened = false;

      this.el.cover.hide();
      this.el.gallery.hide();
      $('body').css({
        'overflow': ''
      });

      n;
    }
  }, {
    key: 'goPrev',
    value: function goPrev() {

      this.el.carousel.trigger('prev.owl.carouse');
    }
  }, {
    key: 'goNext',
    value: function goNext() {
      this.el.carousel.trigger('next.owl.carouse');
    }
  }]);

  return GalleryPopup;
}(MLP.apps.MLPModule);

$.mlpPlugin(GalleryPopup, 'GalleryPopup', false, false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
# extends masonry.pkgb.js
#

*/

var MasonryGallery = function (_MLP$apps$MLPModule) {
  _inherits(MasonryGallery, _MLP$apps$MLPModule);

  function MasonryGallery() {
    _classCallCheck(this, MasonryGallery);

    return _possibleConstructorReturn(this, (MasonryGallery.__proto__ || Object.getPrototypeOf(MasonryGallery)).apply(this, arguments));
  }

  _createClass(MasonryGallery, [{
    key: 'init',
    value: function init() {
      _get(MasonryGallery.prototype.__proto__ || Object.getPrototypeOf(MasonryGallery.prototype), 'init', this).call(this);

      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      _this.el.target.masonry({
        columnWidth: 0,
        itemSelector: '.c-masonry-gallery__item'
      });
    }
  }]);

  return MasonryGallery;
}(MLP.apps.MLPModule);

$.mlpPlugin(MasonryGallery, 'MasonryGallery', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
# extends own.carousel.js
#

*/

var OwlCarousel = function (_MLP$apps$MLPModule) {
  _inherits(OwlCarousel, _MLP$apps$MLPModule);

  function OwlCarousel() {
    _classCallCheck(this, OwlCarousel);

    return _possibleConstructorReturn(this, (OwlCarousel.__proto__ || Object.getPrototypeOf(OwlCarousel)).apply(this, arguments));
  }

  _createClass(OwlCarousel, [{
    key: 'init',
    value: function init() {
      _get(OwlCarousel.prototype.__proto__ || Object.getPrototypeOf(OwlCarousel.prototype), 'init', this).call(this);

      this.el = {
        container: this.el.target,
        prevBtn: $('.js-carousel-prev'),
        nextBtn: $('.js-carousel-next')
      };

      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      var _screenHeight = $(window).height();
      this.el.container.owlCarousel({
        dots: false,
        responsiveClass: true,
        // items: 4,
        responsive: {
          0: {
            items: 2
          },
          480: {
            items: 2
          },
          768: {
            items: 3
          }
        }
      });

      $('.owl-item').css('height', _screenHeight);

      // nav arrows
      this.el.prevBtn.on('click', function () {
        $(_this.el.container).trigger('prev.owl.carousel');
      });

      this.el.nextBtn.on('click', function () {
        $(_this.el.container).trigger('next.owl.carousel');
      });

      var _itemHeight = $('.owl-item').height();
      $('.js-wedo-title').css({
        height: _itemHeight
      });
    }
  }]);

  return OwlCarousel;
}(MLP.apps.MLPModule);

$.mlpPlugin(OwlCarousel, 'OwlCarousel', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SideNav = function (_MLP$apps$MLPModule) {
  _inherits(SideNav, _MLP$apps$MLPModule);

  function SideNav() {
    _classCallCheck(this, SideNav);

    return _possibleConstructorReturn(this, (SideNav.__proto__ || Object.getPrototypeOf(SideNav)).apply(this, arguments));
  }

  _createClass(SideNav, [{
    key: 'init',
    value: function init() {
      _get(SideNav.prototype.__proto__ || Object.getPrototypeOf(SideNav.prototype), 'init', this).call(this);
      this.el = {
        navBtn: this.el.target.find('.js-hamburger'),
        menuPanel: this.el.target.find('.js-panel')
      };
      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;

      this.initMenuPanel();
    }
  }, {
    key: 'initMenuPanel',
    value: function initMenuPanel() {
      var _this = this;

      var toggleLeft;

      this.el.navBtn.on('click', function () {
        toggleLeft = $(_this.el.menuPanel).css('left') == '-400px' ? '0' : '-400px';
        $(this).children('div').eq(0).toggleClass('active');
        $(_this.el.menuPanel).animate({
          left: toggleLeft
        });
      });
    }
  }]);

  return SideNav;
}(MLP.apps.MLPModule);

$.mlpPlugin(SideNav, 'SideNav', false);
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Skewing = function (_MLP$apps$MLPModule) {
  _inherits(Skewing, _MLP$apps$MLPModule);

  function Skewing() {
    _classCallCheck(this, Skewing);

    return _possibleConstructorReturn(this, (Skewing.__proto__ || Object.getPrototypeOf(Skewing)).apply(this, arguments));
  }

  _createClass(Skewing, [{
    key: "init",
    value: function init() {
      _get(Skewing.prototype.__proto__ || Object.getPrototypeOf(Skewing.prototype), "init", this).call(this);
      this.el = {
        _hills: this.el.target.find('.hill'),
        "scale": 0.3,
        "x": 0,
        "y": 0,
        "direction": 0.2,
        "windowX": 0,
        "winWidth": 0
      };
      this.el.winWidth = $(document).width();
      this.el.windowX = this.el.winWidth / 2;
      this.event();
    }
  }, {
    key: "event",
    value: function event() {
      var _this = this;
      $(document).on('mousemove', function (evt) {
        $(_this.el._hills).each(function (index, item) {
          _this.el.x = -(evt.pageX - _this.el.windowX) * _this.el.scale * _this.el.direction * (index - 1.8);
          $(item).css({ "transform": "translateX(" + _this.el.x + "px)" });
        });
      });
    }
  }]);

  return Skewing;
}(MLP.apps.MLPModule);

$.mlpPlugin(Skewing, 'Skewing', false);
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Stars = function (_MLP$apps$MLPModule) {
  _inherits(Stars, _MLP$apps$MLPModule);

  function Stars() {
    _classCallCheck(this, Stars);

    return _possibleConstructorReturn(this, (Stars.__proto__ || Object.getPrototypeOf(Stars)).apply(this, arguments));
  }

  _createClass(Stars, [{
    key: "init",
    value: function init() {
      _get(Stars.prototype.__proto__ || Object.getPrototypeOf(Stars.prototype), "init", this).call(this);
      this.event();
    }
  }, {
    key: "event",
    value: function event() {
      var _canvasId = this.el.target.find("canvas").attr("id"),
          _canvas = document.getElementById(_canvasId),
          _ctx;
      if (_canvas) {
        _ctx = _canvas.getContext("2d");
        _canvas.width = window.innerWidth;
        _canvas.height = window.innerHeight;
        var stars = [],
            FPS = 30,
            x = 1000;
        for (var i = 0; i < x; i++) {
          stars.push({
            x: Math.random() * _canvas.width,
            y: Math.random() * _canvas.height,
            radius: Math.random(),
            vx: Math.floor(Math.random() * 10) - 5,
            vy: Math.floor(Math.random() * 10) - 5
          });
        }
        tick();
      }
      function draw() {
        _ctx.clearRect(0, 0, _canvas.width, _canvas.height);
        _ctx.globalCompositeOperation = "lighter";
        for (var i = 0, x = stars.length; i < x; i++) {
          var s = stars[i];
          _ctx.fillStyle = "#fff";
          _ctx.beginPath();
          _ctx.arc(s.x, s.y, s.radius, 0, 2 * Math.PI);
          _ctx.fill();
        }
      }
      function update() {
        for (var i = 0, x = stars.length; i < x; i++) {
          var s = stars[i];
          s.x += s.vx / FPS;
          s.y += s.vy / FPS;
          if (s.x < 0 || s.x > _canvas.width) s.x = -s.x;
          if (s.y < 0 || s.y > _canvas.height) s.y = -s.y;
        }
      }
      function tick() {
        draw();
        update();
        requestAnimationFrame(tick);
      }
    }
  }]);

  return Stars;
}(MLP.apps.MLPModule);

$.mlpPlugin(Stars, 'Stars', false);
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwitchTab = function (_MLP$apps$MLPModule) {
  _inherits(SwitchTab, _MLP$apps$MLPModule);

  function SwitchTab() {
    _classCallCheck(this, SwitchTab);

    return _possibleConstructorReturn(this, (SwitchTab.__proto__ || Object.getPrototypeOf(SwitchTab)).apply(this, arguments));
  }

  _createClass(SwitchTab, [{
    key: "init",
    value: function init() {
      _get(SwitchTab.prototype.__proto__ || Object.getPrototypeOf(SwitchTab.prototype), "init", this).call(this);
      this.el = {
        _tabs: this.el.target.find('li')
      };
      this.event();
    }
  }, {
    key: "event",
    value: function event() {
      var _this = this,
          _currnetIndex;
      $(_this.el._tabs).on("mouseover", function () {
        _currnetIndex = $(this).index() + 1;
        $(_this.el._tabs).each(function (index, item) {
          var _index = index + 1;
          $(item).find(".c-homepage__tab-panel__button").removeClass("active");
          $(".c-homepage__tab-" + _index).addClass("outPanel");
          $(".c-homepage__tab-" + _index).removeClass("inPanel");
        });
        $(this).find(".c-homepage__tab-panel__button").addClass("active");
        $(".c-homepage__tab-" + _currnetIndex).addClass("inPanel");
        $(".c-homepage__tab-" + _currnetIndex).removeClass("outPanel");

        // tab2 trigger mirror light
        if ($('.c-homepage__tab-2').hasClass('inPanel')) {
          $('.js-mirror-light').addClass('active');
        }
      });
    }
  }]);

  return SwitchTab;
}(MLP.apps.MLPModule);

$.mlpPlugin(SwitchTab, 'SwitchTab', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TopNav = function (_MLP$apps$MLPModule) {
  _inherits(TopNav, _MLP$apps$MLPModule);

  function TopNav() {
    _classCallCheck(this, TopNav);

    return _possibleConstructorReturn(this, (TopNav.__proto__ || Object.getPrototypeOf(TopNav)).apply(this, arguments));
  }

  _createClass(TopNav, [{
    key: 'init',


    // defaults() {
    //   this.defaults = {
    //     property: 'foo'
    //   };
    // }

    value: function init() {
      _get(TopNav.prototype.__proto__ || Object.getPrototypeOf(TopNav.prototype), 'init', this).call(this);
      this.el = {
        navItems: this.el.target.find('a')
      };
      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      this.el.navItems.on('click', function () {
        _this.el.navItems.removeClass('active');
        $(this).addClass('active');
      });
    }
  }]);

  return TopNav;
}(MLP.apps.MLPModule);

$.mlpPlugin(TopNav, 'TopNav', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Validate = function (_MLP$apps$MLPModule) {
  _inherits(Validate, _MLP$apps$MLPModule);

  function Validate() {
    _classCallCheck(this, Validate);

    return _possibleConstructorReturn(this, (Validate.__proto__ || Object.getPrototypeOf(Validate)).apply(this, arguments));
  }

  _createClass(Validate, [{
    key: 'init',
    value: function init() {
      _get(Validate.prototype.__proto__ || Object.getPrototypeOf(Validate.prototype), 'init', this).call(this);
      this.el = {
        successMsg: this.el.target.find('.c-contact-msg'),
        _form: this.el.target.find('#contact-form'),
        _close: this.el.target.find('.js-msg_close'),
        _alert: this.el.target.find('.c-err-msg'),
        _submit: this.el.target.find('button')
      };
      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      var _isPass = true;
      //关掉发送成功提示信息
      $(_this.el._close).on("click", function () {
        $(_this.el.successMsg).hide();
        $(_this.el._alert).text("");
        $(_this.el._form).show();
        $(_this.el._submit).attr("disabled", false);
        $(_this.el._form)[0].reset();
      });
      //ajax 发送数据
      $(_this.el._submit).on("click", function () {
        if (_this.validate()) {
          $.ajax({
            url: "sendmail.php",
            type: "POST",
            data: $("#contact-form").serialize(),
            error: function error() {
              $(_this.el._alert).text("Could not connect to server");
              $(_this.el._submit).attr("disabled", false);
            },
            beforeSend: function beforeSend() {
              $(_this.el._alert).text("Sending...");
              $(_this.el._submit).attr("disabled", true);
            },
            success: function success(html) {
              var cc = html.length;
              switch (html) {
                case "success":
                  $(_this.el.successMsg).show();
                  $(_this.el._form).hide();
                  break;
                default:
                  if (cc > 200) {
                    $(_this.el._alert).html("Could not connect to server");
                    $(_this.el._submit).attr("disabled", false);
                  } else $(_this.el._alert).html(html);
                  break;
              }
            }
          });
          return false;
        }
        return false;
      });

      Validate.prototype.validate = function () {
        var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
        _isPass = true;
        $(_this.el._form).find(":input[required]").each(function (index, item) {
          var _name = $(item).attr("name").split("-")[1];
          if ($(item).val() === "") {
            $(_this.el._alert).text(_name + " is required");
            $(item).focus();
            _isPass = false;
            return false;
          } else if ($(item).attr("type") === "email") {
            if (!pattern.test($(this).val())) {
              $(_this.el._alert).text("Email Address is incorrectly formatted.");
              _isPass = false;
              $(item).focus();
              return false;
            }
          }
        });
        return _isPass;
      };
    }
  }]);

  return Validate;
}(MLP.apps.MLPModule);

$.mlpPlugin(Validate, 'Validate', false);
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WhiteBox = function (_MLP$apps$MLPModule) {
  _inherits(WhiteBox, _MLP$apps$MLPModule);

  function WhiteBox() {
    _classCallCheck(this, WhiteBox);

    return _possibleConstructorReturn(this, (WhiteBox.__proto__ || Object.getPrototypeOf(WhiteBox)).apply(this, arguments));
  }

  _createClass(WhiteBox, [{
    key: 'init',


    // defaults() {
    //   this.defaults = {
    //     property: 'foo'
    //   };
    // }

    value: function init() {
      _get(WhiteBox.prototype.__proto__ || Object.getPrototypeOf(WhiteBox.prototype), 'init', this).call(this);
      this.el = {
        canvas: this.el.target.find('canvas'),
        content: this.el.target.find('.js-white-box-content'),
        title: this.el.target.find('h1')
      };
      this.event();
    }
  }, {
    key: 'event',
    value: function event() {
      var _this = this;
      this.drawWhiteBox();

      $(window).resize(function () {
        _this.drawWhiteBox();
      });
    }
  }, {
    key: 'drawWhiteBox',
    value: function drawWhiteBox() {
      var canvas = $(this.el.canvas);
      var screenH = $(window).height();
      var screenW = $(window).width();

      canvas.attr('height', screenH);
      canvas.attr('width', screenW);

      var spaceLeftRight = 40;
      var spaceUpDown = 80;
      var titleMarginBottom = 100;
      var lineWidth = 3;

      var x0 = $(this.el.title).offset().left - spaceLeftRight;
      var y0 = $(this.el.title).offset().top + $(this.el.title).height() / 2;

      var x1 = $(this.el.content).offset().left - spaceLeftRight;
      var y1 = y0;

      var x2 = x1;
      var y2 = y1 + $(this.el.content).height() + $(this.el.title).height() / 2 + titleMarginBottom + spaceUpDown;

      var x3 = $(this.el.content).offset().left + $(this.el.content).width() + spaceUpDown;
      var y3 = y2;

      var x4 = x3;
      var y4 = y1;

      var x5 = $(this.el.title).offset().left + $(this.el.title).width() + spaceLeftRight;
      var y5 = y0;

      var r = 7;

      var context = canvas[0].getContext('2d');

      // Draw White Box
      context.lineWidth = lineWidth;
      context.strokeStyle = 'rgb(255, 255, 255)';
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
      context.lineTo(x2, y2);
      context.lineTo(x3, y3);
      context.lineTo(x4, y4);
      context.lineTo(x5, y5);
      context.stroke();

      // Draw left dot
      context.beginPath();
      context.strokeStyle = 'rgb(255, 255, 255)';
      context.fillStyle = 'rgb(255, 255, 255)';

      context.arc(x0, y0, r, 0, Math.PI * 2, false);

      context.stroke();
      context.fill();

      // Draw right dot
      context.beginPath();
      context.strokeStyle = 'rgb(255, 255, 255)';
      context.fillStyle = 'rgb(255, 255, 255)';

      context.arc(x5, y5, r, 0, Math.PI * 2, false);

      context.stroke();
      context.fill();
    }
  }]);

  return WhiteBox;
}(MLP.apps.MLPModule);

$.mlpPlugin(WhiteBox, 'WhiteBox', false);